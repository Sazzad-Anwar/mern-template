{"version":3,"file":"static/js/964.ba17cba5.chunk.js","mappings":"wMAMQA,EAAYC,EAAAA,EAAAA,QA6JpB,UA3JgB,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,GAAwCC,EAAAA,EAAAA,KAAhCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,QACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBACEC,UAAS,UACNL,EAAQM,OAAyB,OAAhB,cADX,6DADX,UAKE,UAAC,IAAD,CACEC,oBAAqB,CAAC,KACtBC,gBAAiB,CAACL,EAASM,SAASC,MAAM,KAAK,IAC/CC,KAAK,SACLC,iBAAkBZ,EAAQM,OAC1BD,UAAU,yBALZ,UAOGV,EAASkB,KAAI,SAACC,GACb,OAAIA,EAAKC,YAEL,SAACtB,EAAD,CAEEuB,KAAMF,EAAKE,KACXC,OAAO,cAAGZ,UAAU,UAAb,SAAwBS,EAAKI,OAHtC,SAKGJ,EAAKK,QAAQN,KAAI,SAACM,GACjB,OAAIA,EAAQJ,YAER,SAACtB,EAAD,CACEY,UAAU,kBAEVY,OAAO,cAAGZ,UAAU,UAAb,SAAwBc,EAAQD,OAHzC,SAKGC,EAAQA,QAAQN,KAAI,SAACO,GACpB,OAAIA,EAAWL,YAEX,SAACtB,EAAD,CACEY,UAAU,kBAEVY,OACE,cAAGZ,UAAU,UAAb,SAAwBe,EAAWF,OAJvC,SAOGE,EAAWD,QAAQN,KAAI,SAACQ,GAAD,OACtB,SAAC,SAAD,CAEEhB,UAAU,UACViB,QAAS,kBAAMrB,EAASoB,EAAcE,OAHxC,SAKGF,EAAcH,MAJVG,EAAcG,QAPlBJ,EAAWI,KAkBlB,SAAC,SAAD,CAEEnB,UAAU,UACViB,QAAS,kBAAMrB,EAASmB,EAAWG,OAHrC,SAKGH,EAAWF,MAJPE,EAAWI,QA3BnBL,EAAQK,KAwCf,SAAC,SAAD,CAEEF,QAAS,kBAAMrB,EAASkB,EAAQI,OAChClB,UAAU,UAHZ,SAKGc,EAAQD,MAJJC,EAAQK,QAlDhBV,EAAKU,KA+DZ,SAAC,SAAD,CAEER,KAAMF,EAAKE,KACXX,UAAU,8BAHZ,UAKE,SAAC,KAAD,CAAMoB,GAAIX,EAAKS,KAAf,UACE,iBAAMlB,UAAU,0BAAhB,SAA2CS,EAAKI,UAL7CJ,EAAKU,QAWlB,SAAC/B,EAAD,CACEY,UAAS,mBACNL,EAAQM,OAA2B,gBAAlB,gBADX,mBAEGN,EAAQM,OAAkB,YAAT,QAC7BU,MAAM,SAAC,MAAD,CAAeU,KAAM,KAE3BT,OACE,iBAAKZ,UAAU,kBAAf,WACE,gBAAKA,UAAU,gDAAf,SACGT,EAAMsB,QAET,SAAC,IAAD,CAAKS,MAAM,SAAX,SAAqB5B,IAAI,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAM6B,YAAV,aAAI,EAAYC,WAX/C,SAeGjC,EAAMmB,YACLnB,EAAMuB,QAAQN,KAAI,SAACM,GAAa,IAAD,EAC7B,MAAqB,KAAjBA,EAAQI,MAER,SAAC,SAAD,CAEED,QAAS,kBACPxB,EAAa,CAAEgC,KAAMC,EAAAA,IAAU9B,EAAS,YAE1CI,UAAS,kBACNL,EAAQM,OAAqB,QAAZ,UADX,oBALX,UASE,iBAAMD,UAAU,kBAAhB,SAAmCc,EAAQD,QARtCC,EAAQK,IAYjBL,EAAQa,YACRjC,GACqB,gBAAjB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM6B,YAAN,eAAYC,MAEL,MAGL,SAAC,SAAD,CAEExB,UAAS,kBACNL,EAAQM,OAAqB,QAAZ,UADX,oBAFX,UAME,SAAC,KAAD,CAAMmB,GAAIN,EAAQI,KAAMlB,UAAU,kBAAlC,SACGc,EAAQD,QANNC,EAAQK,QAnClB5B,EAAM4B","sources":["components/Sidebar/Index.jsx"],"sourcesContent":["import { Menu, Tag } from \"antd\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useGlobalContext } from \"../../context/GlobalContextProvider\";\nimport { LOGOUT } from \"../../context/constants/AuthConstants\";\nimport { AiOutlineUser } from \"react-icons/ai\";\n\nconst { SubMenu } = Menu;\n\nconst SideBar = ({ menulist, admin }) => {\n  const { authDispatch, auth, sideBar } = useGlobalContext();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <div\n      className={`${\n        !sideBar.isOpen ? \"w-0 md:w-14\" : \"w-60\"\n      } normal-transition h-screen border-r dark:border-gray-700`}\n    >\n      <Menu\n        defaultSelectedKeys={[\"/\"]}\n        defaultOpenKeys={[location.pathname.split(\"/\")[1]]}\n        mode=\"inline\"\n        inlineCollapsed={!sideBar.isOpen}\n        className=\"h-full w-auto relative\"\n      >\n        {menulist.map((menu) => {\n          if (menu.hasSubMenu) {\n            return (\n              <SubMenu\n                key={menu.id}\n                icon={menu.icon}\n                title={<p className=\"text-sm\">{menu.name}</p>}\n              >\n                {menu.subMenu.map((subMenu) => {\n                  if (subMenu.hasSubMenu) {\n                    return (\n                      <SubMenu\n                        className=\"dark:text-white\"\n                        key={subMenu.id}\n                        title={<p className=\"text-sm\">{subMenu.name}</p>}\n                      >\n                        {subMenu.subMenu.map((subSubMenu) => {\n                          if (subSubMenu.hasSubMenu) {\n                            return (\n                              <SubMenu\n                                className=\"dark:text-white\"\n                                key={subSubMenu.id}\n                                title={\n                                  <p className=\"text-sm\">{subSubMenu.name}</p>\n                                }\n                              >\n                                {subSubMenu.subMenu.map((subSubSubMenu) => (\n                                  <Menu.Item\n                                    key={subSubSubMenu.id}\n                                    className=\"text-sm\"\n                                    onClick={() => navigate(subSubSubMenu.link)}\n                                  >\n                                    {subSubSubMenu.name}\n                                  </Menu.Item>\n                                ))}\n                              </SubMenu>\n                            );\n                          } else {\n                            return (\n                              <Menu.Item\n                                key={subSubMenu.id}\n                                className=\"text-sm\"\n                                onClick={() => navigate(subSubMenu.link)}\n                              >\n                                {subSubMenu.name}\n                              </Menu.Item>\n                            );\n                          }\n                        })}\n                      </SubMenu>\n                    );\n                  } else {\n                    return (\n                      <Menu.Item\n                        key={subMenu.id}\n                        onClick={() => navigate(subMenu.link)}\n                        className=\"text-sm\"\n                      >\n                        {subMenu.name}\n                      </Menu.Item>\n                    );\n                  }\n                })}\n              </SubMenu>\n            );\n          } else {\n            return (\n              <Menu.Item\n                key={menu.id}\n                icon={menu.icon}\n                className=\"border-r border-transparent\"\n              >\n                <Link to={menu.link}>\n                  <span className=\"text-sm dark:text-white\">{menu.name}</span>\n                </Link>\n              </Menu.Item>\n            );\n          }\n        })}\n        <SubMenu\n          className={`absolute ${\n            !sideBar.isOpen ? \"bottom-[70px]\" : \"bottom-[55px]\"\n          } w-full ${!sideBar.isOpen ? \"py-0\" : \"pt-2 pb-4\"}`}\n          icon={<AiOutlineUser size={20} />}\n          key={admin.id}\n          title={\n            <div className=\"dark:text-white\">\n              <div className=\"text-sm truncate leading-3 mt-2 font-semibold\">\n                {admin.name}\n              </div>\n              <Tag color=\"purple\">{auth && auth?.user?.role}</Tag>\n            </div>\n          }\n        >\n          {admin.hasSubMenu &&\n            admin.subMenu.map((subMenu) => {\n              if (subMenu.link === \"\") {\n                return (\n                  <Menu.Item\n                    key={subMenu.id}\n                    onClick={() =>\n                      authDispatch({ type: LOGOUT }, navigate(\"/login\"))\n                    }\n                    className={`text-sm ${\n                      !sideBar.isOpen ? \"pl-auto\" : \"pl-14\"\n                    } dark:text-white`}\n                  >\n                    <span className=\"dark:text-white\">{subMenu.name}</span>\n                  </Menu.Item>\n                );\n              } else if (\n                subMenu.superAdmin &&\n                auth &&\n                auth?.user?.role !== \"superadmin\"\n              ) {\n                return null;\n              } else {\n                return (\n                  <Menu.Item\n                    key={subMenu.id}\n                    className={`text-sm ${\n                      !sideBar.isOpen ? \"pl-auto\" : \"pl-14\"\n                    } dark:text-white`}\n                  >\n                    <Link to={subMenu.link} className=\"dark:text-white\">\n                      {subMenu.name}\n                    </Link>\n                  </Menu.Item>\n                );\n              }\n            })}\n        </SubMenu>\n      </Menu>\n    </div>\n  );\n};\n\nexport default SideBar;\n"],"names":["SubMenu","Menu","menulist","admin","useGlobalContext","authDispatch","auth","sideBar","navigate","useNavigate","location","useLocation","className","isOpen","defaultSelectedKeys","defaultOpenKeys","pathname","split","mode","inlineCollapsed","map","menu","hasSubMenu","icon","title","name","subMenu","subSubMenu","subSubSubMenu","onClick","link","id","to","size","color","user","role","type","LOGOUT","superAdmin"],"sourceRoot":""}
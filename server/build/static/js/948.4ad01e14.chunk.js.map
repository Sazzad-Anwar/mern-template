{"version":3,"file":"static/js/948.4ad01e14.chunk.js","mappings":"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","sources":["components/ImageCard/Index.jsx","pages/Folders/Details.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { API_URL } from \"../../assets/app.config\";\nimport { FiCopy } from \"react-icons/fi\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport axiosInstance from \"../../utils/AxiosInstance\";\nimport CopyToClipboard from \"../../utils/CopyToClipboard\";\nimport { Button, Form, Input, Popconfirm, Tooltip, Image } from \"antd\";\n\nexport default function Index({ file, files, setFiles, folderId, mutate }) {\n  const [editMode, setEditMode] = useState(false);\n  const submitBtnRef = useRef();\n\n  const deleteFile = async (id) => {\n    try {\n      await axiosInstance.delete(`/files/${id}`);\n      setFiles(files.filter((file) => file._id !== id));\n      mutate(`/files?folderId=${id}`, { data: files }, false);\n      toast.success(\"File is deleted\");\n    } catch (error) {\n      toast.error(\n        error.response.data.message\n          ? error.response.data.message\n          : error.message\n      );\n    }\n  };\n\n  const saveFile = async (values) => {\n    setEditMode(false);\n    if (values.name !== file.name) {\n      try {\n        await axiosInstance.put(`/files/${file._id}`, values);\n        mutate(\n          `/files?folderId=${folderId}`,\n          {\n            data: files.map((item) =>\n              item._id === file._id ? { ...item, name: values.name } : item\n            ),\n          },\n          false\n        );\n        toast.success(\"Image name is saved\");\n      } catch (error) {\n        toast.error(error.response.data.message);\n      }\n    }\n  };\n\n  const handleClick = (e) => {\n    if (e.detail === 2) {\n      setEditMode(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center\">\n        {mutate && editMode ? (\n          <Form\n            initialValues={{\n              name: file.name,\n            }}\n            onFinish={saveFile}\n            className=\"mr-2\"\n          >\n            <Form.Item\n              name=\"name\"\n              className=\"mb-0\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the folder name\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Folder name\"\n                className=\"w-full text-center\"\n                size=\"small\"\n                autoFocus\n                onBlur={() => {\n                  setEditMode(false);\n                  submitBtnRef.current.click();\n                }}\n              />\n            </Form.Item>\n\n            <Button ref={submitBtnRef} htmlType=\"submit\" className=\"hidden\" />\n          </Form>\n        ) : (\n          <Tooltip\n            title={mutate && \"Double click to name to edit\"}\n            placement=\"bottom\"\n          >\n            <button onClick={handleClick} className=\"truncate\">\n              <span className=\"dark:text-white text-black truncate font-mono\">\n                {file.name}\n              </span>\n            </button>\n          </Tooltip>\n        )}\n        <div className=\"flex items-center\">\n          <Tooltip title=\"Copy url to clipboard\">\n            <button\n              onClick={() => CopyToClipboard(API_URL + \"/static/\" + file.url)}\n            >\n              <FiCopy className=\"dark:text-white text-black\" />\n            </button>\n          </Tooltip>\n          <Tooltip title=\"Delete file\">\n            <Popconfirm\n              title=\"Are you sure to delete this file?\"\n              onConfirm={() => deleteFile(file._id)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n              className=\"ml-2\"\n            >\n              <button>\n                <AiFillCloseCircle className=\"dark:text-white text-black\" />\n              </button>\n            </Popconfirm>\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <Image\n          height=\"auto\"\n          width=\"auto\"\n          alt={file.name}\n          src={API_URL + \"/static/\" + file.url}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport Fetcher from \"../../utils/Fetcher\";\nimport BreadCrumbs from \"../../components/BreadCrumbs/Index\";\nimport { Button, Pagination, Input } from \"antd\";\nimport axiosInstance from \"../../utils/AxiosInstance\";\nimport Error from \"../../components/Error/Index\";\nimport ImageCard from \"../../components/ImageCard/Index\";\nimport { toast } from \"react-toastify\";\nimport { useGlobalContext } from \"../../context/GlobalContextProvider\";\n\nlet { Search } = Input;\n\nexport default function Details() {\n  const { sideBar } = useGlobalContext();\n  const { id } = useParams();\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalSize, setTotalSize] = useState(0);\n\n  const [files, setFiles] = useState([]);\n  const { data } = useSWR(`/folders/${id}`, Fetcher);\n  const {\n    data: fileArray,\n    error,\n    mutate,\n  } = useSWR(\n    `/files?folderId=${id}&page=${page}&pageSize=${pageSize}`,\n    Fetcher\n  );\n\n  const navigate = useNavigate();\n\n  const folder = data && data.data;\n\n  useEffect(() => {\n    setFiles(fileArray && fileArray.data);\n    setTotalSize(fileArray && fileArray.totalSize);\n  }, [fileArray]);\n\n  let breadcrumbs = [\n    {\n      isLink: true,\n      link: \"/\",\n      name: \"Home\",\n    },\n    {\n      isLink: true,\n      link: \"/folders\",\n      name: \"Folders\",\n    },\n    {\n      isLink: false,\n      link: \"\",\n      name: folder?.name + \"s\",\n    },\n  ];\n\n  const onSearch = async (value) => {\n    try {\n      const { data } = await axiosInstance.get(\n        `/files?folderId=${id}&page=${page}&pageSize=${pageSize}&q=${value}`\n      );\n      setFiles(data.data);\n      setTotalSize(data.totalSize);\n    } catch (error) {\n      toast.error(\n        error.response.data.message\n          ? error.response.data.message\n          : error.message\n      );\n    }\n  };\n\n  return (\n    <>\n      <BreadCrumbs details={breadcrumbs} />\n      {error ? (\n        <Error\n          error={\n            error.response.data.message\n              ? error.response.data.message\n              : error.message\n          }\n        />\n      ) : (\n        <div className=\"my-5\">\n          <div className=\"flex justify-between items-center\">\n            <Button\n              onClick={() => navigate(`/folders/${id}/upload`)}\n              type=\"ghost\"\n              shape=\"default\"\n              className=\"mr-1 flex py-5 items-center shadow-md dark:text-white dark:hover:text-blue-400 dark:border-gray-600 dark:hover:border-blue-400\"\n            >\n              <span>Upload a file</span>\n            </Button>\n\n            <Search\n              allowClear\n              size=\"large\"\n              className=\"w-full lg:w-96 lg:ml-auto search-input\"\n              placeholder=\"Search...\"\n              onSearch={onSearch}\n            />\n          </div>\n\n          <div\n            className={\n              sideBar.isOpen\n                ? \"my-5 normal-transition grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 2xl:grid-cols-5 gap-4\"\n                : \"my-5 normal-transition grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-4\"\n            }\n          >\n            {files &&\n              files.map((file) => (\n                <ImageCard\n                  key={file._id}\n                  file={file}\n                  files={files}\n                  setFiles={setFiles}\n                  folderId={folder._id}\n                  mutate={mutate}\n                />\n              ))}\n          </div>\n          <Pagination\n            showSizeChanger={true}\n            showTotal={(total, range) =>\n              `${range[0]}-${range[1]} of ${total} items`\n            }\n            total={totalSize}\n            current={page}\n            pageSize={pageSize}\n            className=\"dark:text-white my-5 flex justify-end items-end\"\n            hideOnSinglePage={true}\n            responsive={true}\n            onChange={(page, pageSize) => {\n              setPage(page);\n              setPageSize(pageSize);\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["Index","file","files","setFiles","folderId","mutate","useState","editMode","setEditMode","submitBtnRef","useRef","deleteFile","id","axiosInstance","filter","_id","data","toast","response","message","saveFile","values","name","map","item","className","initialValues","onFinish","rules","required","placeholder","size","autoFocus","onBlur","current","click","ref","htmlType","title","placement","onClick","e","detail","CopyToClipboard","API_URL","url","onConfirm","okText","cancelText","height","width","alt","src","Search","Input","Details","sideBar","useGlobalContext","useParams","page","setPage","pageSize","setPageSize","totalSize","setTotalSize","useSWR","Fetcher","fileArray","error","navigate","useNavigate","folder","useEffect","breadcrumbs","isLink","link","onSearch","value","details","type","shape","allowClear","isOpen","showSizeChanger","showTotal","total","range","hideOnSinglePage","responsive","onChange"],"sourceRoot":""}
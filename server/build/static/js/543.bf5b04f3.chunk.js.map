{"version":3,"file":"static/js/543.bf5b04f3.chunk.js","mappings":"gSAUe,SAASA,IAEpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAASC,EAAAA,EAAAA,IAAO,YAAD,OAAaH,GAAMI,EAAAA,GAAlCF,KAEFG,EAASH,GAAQA,EAAKA,KAE5B,GAA4CI,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEIC,EAAc,CACd,CACIC,QAAQ,EACRC,KAAM,IACNC,KAAM,QAEV,CACIF,QAAQ,EACRC,KAAM,WACNC,KAAM,WAEV,CACIF,QAAQ,EACRC,KAAK,YAAD,OAAcjB,EAAd,YACJkB,MAAY,OAANb,QAAM,IAANA,OAAA,EAAAA,EAAQa,MAAO,KAEzB,CACIF,QAAQ,EACRC,KAAM,GACNC,KAAM,WAIRC,EAAY,SAACC,GACf,IAAIC,SAAQ,SAACC,EAASC,GAClB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,cAAcN,GAErBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SAErCJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,QAMrCC,EAAa,mCAAG,WAAOX,GAAP,iEACbA,EAAKY,UACNZ,EAAKY,QAAUb,EAAUC,EAAKa,eAC9BvB,EAAgBU,EAAKY,SACrBxB,GAAkB,GAClBI,EAAgBQ,EAAKF,OALP,2CAAH,sDAWbgB,GACF,+BACI,SAAC,IAAD,KACA,gBACIC,MAAO,CACHC,UAAW,GAFnB,uBAUR,OACI,iCACI,SAAC,IAAD,CAAaC,QAAStB,KACtB,SAAC,IAAD,CACIuB,OAAO,+DACPC,SAAS,eACT1B,SAAUA,EACV2B,UAAWT,EACXU,SAvBS,SAAC,GAAD,IAAaC,EAAb,EAAG7B,SAAH,OAA+BC,EAAY4B,IAkBxD,SAOK7B,EAAS8B,QAAU,EAAI,KAAOT,KAEnC,SAAC,IAAD,CAAOU,QAASrC,EAAgBsC,MAAOlC,EAAcmC,OAAQ,KAAMC,SAtCtD,kBAAMvC,GAAkB,IAsCrC,UACI,gBACIwC,IAAI,UACJb,MAAO,CACHc,MAAO,QAEXC,IAAKzC,W,mCClGzB,IADgB,SAAC0C,GAAD,OAASC,EAAAA,EAAAA,IAAkBD,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIpD","sources":["pages/Upload/Index.jsx","utils/Fetcher.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport BreadCrumbs from \"../../components/BreadCrumbs/Index\";\nimport Fetcher from '../../utils/Fetcher';\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\n\n\nexport default function Index() {\n\n    const { id } = useParams();\n    const { data } = useSWR(`/folders/${id}`, Fetcher);\n\n    const folder = data && data.data;\n\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n    const [fileList, setFileList] = useState([]);\n\n    let breadcrumbs = [\n        {\n            isLink: true,\n            link: \"/\",\n            name: \"Home\",\n        },\n        {\n            isLink: true,\n            link: \"/folders\",\n            name: \"Folders\",\n        },\n        {\n            isLink: true,\n            link: `/folders/${id}/details`,\n            name: folder?.name + \"s\",\n        },\n        {\n            isLink: false,\n            link: \"\",\n            name: \"Upload\",\n        }\n    ];\n\n    const getBase64 = (file) => {\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.readAsDataURL(file);\n\n            reader.onload = () => resolve(reader.result);\n\n            reader.onerror = (error) => reject(error);\n        });\n    }\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = async (file) => {\n        if (!file.preview) {\n            file.preview = getBase64(file.originFileObj);\n            setPreviewImage(file.preview);\n            setPreviewVisible(true);\n            setPreviewTitle(file.name);\n        }\n    };\n\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\n\n    const uploadButton = (\n        <button>\n            <PlusOutlined />\n            <div\n                style={{\n                    marginTop: 8,\n                }}\n            >\n                Upload\n            </div>\n        </button>\n    );\n\n    return (\n        <>\n            <BreadCrumbs details={breadcrumbs} />\n            <Upload\n                action=\"https://run.mocky.io/v3/5265c021-1478-422c-9feb-aa9029571cb2\"\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n            >\n                {fileList.length >= 8 ? null : uploadButton}\n            </Upload>\n            <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\n                <img\n                    alt=\"example\"\n                    style={{\n                        width: '100%',\n                    }}\n                    src={previewImage}\n                />\n            </Modal>\n        </>\n    )\n}\n","import axiosInstance from \"../utils/AxiosInstance\";\n\nconst Fetcher = (url) => axiosInstance.get(url).then((res) => res.data);\nexport default Fetcher;\n"],"names":["Index","id","useParams","data","useSWR","Fetcher","folder","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","breadcrumbs","isLink","link","name","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handlePreview","preview","originFileObj","uploadButton","style","marginTop","details","action","listType","onPreview","onChange","newFileList","length","visible","title","footer","onCancel","alt","width","src","url","axiosInstance","then","res"],"sourceRoot":""}
{"version":3,"file":"static/js/941.e8778ee7.chunk.js","mappings":"8KA4DA,IAvDwB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACzB,GAA0BC,EAAAA,EAAAA,UAAS,QAAnC,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACc,qBAAXC,SAEgB,SAAvBC,aAAaJ,SACV,UAAWI,eACZD,OAAOE,WAAW,gCAAgCC,SAEpDC,SAASC,gBAAgBC,UAAUC,IAAI,QACvCT,EAAS,QACTG,aAAaO,QAAQ,QAAS,UAE9BP,aAAaO,QAAQ,QAAS,SAC9BV,EAAS,SACTM,SAASC,gBAAgBC,UAAUG,OAAO,YAG7C,CAACZ,IAEAF,EAAmB,MAGrB,mBACEe,QAAS,WACO,SAAVb,GACFI,aAAaO,QAAQ,QAAS,SAC9BV,EAAS,WAETG,aAAaO,QAAQ,QAAS,QAC9BV,EAAS,UAGba,UAAU,oHAVZ,SAYa,SAAVd,GACC,SAAC,IAAD,CACEe,UAAU,cACVC,OAAO,mDAFT,UAIE,SAAC,MAAD,CAAOF,UAAU,wJAGnB,SAAC,IAAD,CACEC,UAAU,cACVC,OAAO,kDAFT,UAIE,SAAC,MAAD,CAAQF,UAAU,sJ,2ICM5B,EApDe,SAAC,GAAoB,EAAlBG,YAAmB,IACnC,GAA2CC,EAAAA,EAAAA,KAAnCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,sBAUjB,OACE,mBAAQN,UAAU,yIAAlB,UACE,iBAAKA,UAAU,wDAAf,WACE,gBAAKA,UAAU,kGAAf,UACE,mBACED,QAbY,WAChBM,EAAQE,OACVD,EAAsB,CAAEE,KAAMC,EAAAA,iBAE9BH,EAAsB,CAAEE,KAAME,EAAAA,iBAUxBV,UAAU,iOAFZ,SAIGK,EAAQE,QACP,SAAC,IAAD,CACEN,UAAU,aACVC,OAAO,8CAFT,UAIE,SAAC,MAAD,CAAkBF,UAAU,oFAG9B,SAAC,IAAD,CACEC,UAAU,aACVC,OAAO,6CAFT,UAIE,SAAC,MAAD,CAAgBF,UAAU,wFAKlC,iBAAKA,UAAU,oBAAf,WACE,SAAC,IAAD,CACEC,UAAU,aACVC,OAAO,2CAAmBS,KAF5B,UAIE,eAAGX,UAAU,uDAAb,cACIW,QAGN,SAAC,IAAD,CAAiBX,UAAU","sources":["components/DarkModeToggler/Index.jsx","components/Header/Index.jsx"],"sourcesContent":["import { Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { FiSun } from \"react-icons/fi\";\nimport { FaMoon } from \"react-icons/fa\";\n\nconst DarkModeToggler = ({ hideButton }) => {\n  const [theme, setTheme] = useState(\"dark\");\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      if (\n        localStorage.theme === \"dark\" ||\n        (!(\"theme\" in localStorage) &&\n          window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n      ) {\n        document.documentElement.classList.add(\"dark\");\n        setTheme(\"dark\");\n        localStorage.setItem(\"theme\", \"dark\");\n      } else {\n        localStorage.setItem(\"theme\", \"light\");\n        setTheme(\"light\");\n        document.documentElement.classList.remove(\"dark\");\n      }\n    }\n  }, [theme]);\n\n  if (hideButton) return null;\n\n  return (\n    <button\n      onClick={() => {\n        if (theme === \"dark\") {\n          localStorage.setItem(\"theme\", \"light\");\n          setTheme(\"light\");\n        } else {\n          localStorage.setItem(\"theme\", \"dark\");\n          setTheme(\"dark\");\n        }\n      }}\n      className=\"cursor-pointer text-gray-600 transition-all ease-in-out hover:text-black dark:text-gray-500 dark:hover:text-white\"\n    >\n      {theme === \"dark\" ? (\n        <Tooltip\n          placement=\"bottomRight\"\n          title={<span>Toggle to light mode</span>}\n        >\n          <FiSun className=\"bi bi-brightness-high-fill normal-transition text-xl text-gray-600 hover:text-black active:animate-ping dark:text-gray-500 dark:hover:text-white\" />\n        </Tooltip>\n      ) : (\n        <Tooltip\n          placement=\"bottomRight\"\n          title={<span>Toggle to dark mode</span>}\n        >\n          <FaMoon className=\"bi bi-moon-stars-fill normal-transition text-xl text-gray-600 hover:text-black active:animate-ping dark:text-gray-500 dark:hover:text-white\" />\n        </Tooltip>\n      )}\n    </button>\n  );\n};\n\nexport default DarkModeToggler;\n","import { RiMenuFoldLine, RiMenuUnfoldLine } from \"react-icons/ri\";\nimport DarkModeToggler from \"../DarkModeToggler/Index\";\nimport { useGlobalContext } from \"../../context/GlobalContextProvider\";\nimport { CLOSE_SIDE_BAR, OPEN_SIDE_BAR } from \"../../context/constants/SideBar\";\nimport { Tooltip } from \"antd\";\nimport AppData from \"../../../package.json\";\n\nconst Header = ({ breadcrumbs }) => {\n  const { sideBar, sideBarToggleDispatch } = useGlobalContext();\n\n  const toggleSideBar = () => {\n    if (sideBar.isOpen) {\n      sideBarToggleDispatch({ type: CLOSE_SIDE_BAR });\n    } else {\n      sideBarToggleDispatch({ type: OPEN_SIDE_BAR });\n    }\n  };\n\n  return (\n    <header className=\"normal-transition sticky top-0 z-20 h-16 min-w-full border-b border-b-gray-300 bg-white py-2.5 dark:border-b-gray-900 dark:bg-deepDark\">\n      <div className=\"mx-2 md:mx-5 flex h-full items-center justify-between\">\n        <div className=\"normal-transition font-nunito purple-text flex w-auto items-center py-0 text-2xl font-extrabold\">\n          <button\n            onClick={toggleSideBar}\n            className=\"absolute flex justify-center items-center rounded-full top-1/2 left-3 -translate-y-1/2 scale-100 cursor-pointer p-2 active:scale-90 bg-transparent hover:bg-gray-200 dark:bg-transparent hover:dark:bg-black normal-transition\"\n          >\n            {sideBar.isOpen ? (\n              <Tooltip\n                placement=\"bottomLeft\"\n                title={<span>Close Side Menu</span>}\n              >\n                <RiMenuUnfoldLine className=\"normal-transition text-2xl text-black active:rotate-[360deg] dark:text-white\" />\n              </Tooltip>\n            ) : (\n              <Tooltip\n                placement=\"bottomLeft\"\n                title={<span>Open Side Menu</span>}\n              >\n                <RiMenuFoldLine className=\"normal-transition text-2xl text-black active:rotate-[360deg] dark:text-white\" />\n              </Tooltip>\n            )}\n          </button>\n        </div>\n        <div className=\"flex items-center\">\n          <Tooltip\n            placement=\"bottomLeft\"\n            title={<span>App version {AppData.version}</span>}\n          >\n            <p className=\"dark:text-white mr-5 text-base font-medium font-mono\">\n              v{AppData.version}\n            </p>\n          </Tooltip>\n          <DarkModeToggler className=\"mr-auto\" />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":["hideButton","useState","theme","setTheme","useEffect","window","localStorage","matchMedia","matches","document","documentElement","classList","add","setItem","remove","onClick","className","placement","title","breadcrumbs","useGlobalContext","sideBar","sideBarToggleDispatch","isOpen","type","CLOSE_SIDE_BAR","OPEN_SIDE_BAR","AppData"],"sourceRoot":""}
{"version":3,"file":"static/js/767.62b72a76.chunk.js","mappings":"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","sources":["pages/Auth/ResetPassword.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-typical/node_modules/@camwiegert/typical/typical.js","../node_modules/react-typical/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-typical/src/index.js"],"sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport { FiKey } from \"react-icons/fi\";\nimport Typical from \"react-typical\";\nimport { AiFillLock } from \"react-icons/ai\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { APP_MOTTO_1, APP_MOTTO_2, APP_NAME } from \"../../assets/app.config\";\nimport axiosInstance from \"../../utils/AxiosInstance\";\nimport { useGlobalContext } from \"../../context/GlobalContextProvider\";\n\nexport default function ResetPassword() {\n  const { token } = useParams();\n  const { auth } = useGlobalContext();\n  const decoded = jwtDecode(token);\n  const [isTokenInvalid, setIsTokenInvalid] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (decoded.exp < Date.now() / 1000) {\n        toast.error(\"Token expired\");\n        setIsTokenInvalid(true);\n        clearInterval(interval);\n      }\n    }, 1000 * 60);\n    return () => clearInterval(interval);\n  }, [decoded.exp, navigate]);\n\n  const onFinish = async ({ password, confirmPassword }) => {\n    try {\n      await axiosInstance.post(`/auth/resetPassword/${decoded.email}`, {\n        password,\n      });\n      navigate(\"/\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    toast.error(\"errorInfo\");\n  };\n\n  if (auth.user) {\n    return <Navigate to=\"/\" />;\n  } else {\n    return (\n      <div className=\"relative grid h-screen w-screen grid-cols-1 overflow-hidden lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5\">\n        <div className=\"relative hidden lg:col-span-2 lg:block xl:col-span-3 2xl:col-span-4\">\n          <img\n            className=\"h-full w-auto brightness-50\"\n            src=\"/login-image.png\"\n            alt=\"login\"\n          />\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center backdrop-blur-md\">\n            <img className=\"h-20 w-20\" src=\"/logo192.png\" alt=\"logo\" />\n            <h1 className=\"text-white xl:text-5xl\">{APP_NAME}</h1>\n            <div className=\"text-2xl text-white\">\n              <Typical\n                steps={[APP_MOTTO_1, 2000, APP_MOTTO_2, 3000]}\n                loop={Infinity}\n                wrapper=\"p\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex h-full w-full items-center bg-dark px-5 pt-10 backdrop-blur-lg lg:bg-dark\">\n          <div className=\"w-full\">\n            <h1 className=\"flex items-center justify-center text-2xl font-semibold text-white\">\n              <div className=\"rounded-full bg-gray-600 p-3 flex justify-center items-center\">\n                <AiFillLock size={30} />\n              </div>\n            </h1>\n            {isTokenInvalid ? (\n              <div className=\"text-center\">\n                <h1 className=\"text-white mt-5 text-xl md:text-3xl\">\n                  This link has expired\n                </h1>\n                <Link to=\"/forgot-password\">\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"mt-5 w-full\"\n                    size=\"large\"\n                  >\n                    Get a new token\n                  </Button>\n                </Link>\n              </div>\n            ) : (\n              <Form\n                layout=\"vertical\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                name=\"basic\"\n              >\n                <Form.Item\n                  label={\n                    <h1 className=\"text-lg font-semibold text-white\">\n                      Password\n                    </h1>\n                  }\n                  name=\"password\"\n                  dependencies={[\"confirmPassword\"]}\n                  hasFeedback\n                  className=\"mt-10 w-full\"\n                  rules={[\n                    { required: true, message: \"Please input your password!\" },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (\n                          !value ||\n                          getFieldValue(\"confirmPassword\") === value\n                        ) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          new Error(\n                            \"The two passwords that you entered do not match!\"\n                          )\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password\n                    type=\"password\"\n                    size=\"large\"\n                    prefix={<FiKey size={25} />}\n                    placeholder=\"Password\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label={\n                    <h1 className=\"text-lg font-semibold text-white\">\n                      Confirm Password\n                    </h1>\n                  }\n                  dependencies={[\"password\"]}\n                  hasFeedback\n                  name=\"confirmPassword\"\n                  className=\"mt-10 w-full\"\n                  rules={[\n                    { required: true, message: \"Please input your password!\" },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          new Error(\n                            \"The two passwords that you entered do not match!\"\n                          )\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password\n                    type=\"password\"\n                    size=\"large\"\n                    prefix={<FiKey size={25} />}\n                    placeholder=\"Password\"\n                  />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"mt-5 w-full\"\n                    size=\"large\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n\n                <Link to=\"/login\">\n                  <p className=\"normal-transition text-center text-base text-gray-300 underline hover:text-white\">\n                    Back to login\n                  </p>\n                </Link>\n              </Form>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n"],"names":["ResetPassword","token","useParams","auth","useGlobalContext","decoded","jwtDecode","useState","isTokenInvalid","setIsTokenInvalid","navigate","useNavigate","useEffect","interval","setInterval","exp","Date","now","toast","clearInterval","onFinish","password","confirmPassword","axiosInstance","email","response","data","message","user","to","className","src","alt","APP_NAME","steps","APP_MOTTO_1","APP_MOTTO_2","loop","Infinity","wrapper","size","type","htmlType","layout","onFinishFailed","errorInfo","name","label","dependencies","hasFeedback","rules","required","getFieldValue","validator","_","value","Promise","reject","Error","resolve","prefix","placeholder","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","editor","writer","deleter","node","args","arg","edit","wait","text","overlap","getOverlap","textContent","perform","ms","setTimeout","edits","speed","op","Math","random","requestAnimationFrame","startIndex","endIndex","slice","join","start","end","NaN","findIndex","char","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","typicalRef","useRef","Component","classNames","styles","unshift","current","concat","loopedType","fill","flat","React"],"sourceRoot":""}
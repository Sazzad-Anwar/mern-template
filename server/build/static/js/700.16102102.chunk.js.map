{"version":3,"file":"static/js/700.16102102.chunk.js","mappings":"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","sources":["components/Modal/Index.jsx","components/CategoryCard/Index.jsx","pages/Category/Index.jsx","utils/CapitalLetterWord.jsx"],"sourcesContent":["import React from \"react\";\nimport { Modal as AntModal } from \"antd\";\n\nexport default function Modal({ showModal, toggleModal, children, title }) {\n  return (\n    <AntModal\n      visible={showModal}\n      title={title}\n      onOk={toggleModal}\n      onCancel={toggleModal}\n      footer={null}\n    >\n      {children}\n    </AntModal>\n  );\n}\n","import { Avatar, Button, Popconfirm, Tooltip } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport useSWR, { mutate } from \"swr\";\nimport axiosInstance from \"../../utils/AxiosInstance\";\nimport CapitalLetterWord from \"../../utils/CapitalLetterWord\";\nimport Fetcher from \"../../utils/Fetcher\";\nimport Modal from \"../Modal/Index\";\n\nexport default function Index({ category }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const { data } = useSWR(\"/categories\", Fetcher);\n\n  useEffect(() => {\n    setCategories(data && data.data);\n  }, [data]);\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const deleteCategory = async (id) => {\n    try {\n      await axiosInstance.delete(`/categories/${id}`);\n      toast.success(\"Category deleted successfully\");\n      setCategories(categories.filter((category) => category.id !== id));\n      mutate(`/categories`);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"my-3 shadow-md hover:shadow-lg normal-transition pl-2 py-2 border border-gray-300 dark:border-gray-600 rounded-md flex items-center justify-between\">\n        <button onClick={toggleModal} className=\"flex items-center\">\n          <Avatar\n            alt={category.name}\n            src={category.image}\n            className=\"dark:text-gray-900 mr-2\"\n            size={35}\n          >\n            {category.name.split(\"\")[0].toUpperCase()}\n          </Avatar>\n          <div className=\"overflow-hidden\">\n            <p className=\"font-medium dark:text-white text-base truncate\">\n              {CapitalLetterWord(category.name)}\n            </p>\n          </div>\n        </button>\n\n        <div>\n          <Tooltip title=\"Edit category\">\n            <Button\n              onClick={() => navigate(`/category/${category._id}`)}\n              type=\"ghost\"\n              shape=\"default\"\n              className=\"mr-1 dark:text-white dark:hover:text-blue-400 dark:border-gray-600 dark:hover:border-blue-400\"\n              icon={\n                <div className=\"flex justify-center items-center\">\n                  <FiEdit3 />\n                </div>\n              }\n            />\n          </Tooltip>\n          <Tooltip title=\"Delete category\">\n            <Popconfirm\n              title=\"Are you sure to delete this category?\"\n              onConfirm={() => deleteCategory(category._id)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button\n                type=\"ghost\"\n                shape=\"default\"\n                className=\"mr-2 dark:text-white dark:hover:text-blue-400 dark:border-gray-600 dark:hover:border-blue-400\"\n                icon={\n                  <div className=\"flex justify-center items-center\">\n                    <AiFillDelete />\n                  </div>\n                }\n              />\n            </Popconfirm>\n          </Tooltip>\n        </div>\n      </div>\n      {/* Add category modal */}\n      <Modal\n        showModal={isOpen}\n        toggleModal={toggleModal}\n        title=\"Category Details\"\n      >\n        <h2 className=\"dark:text-white text-lg\">\n          Category:{\" \"}\n          <span className=\"font-mono font-semibold ml-2\">\n            {CapitalLetterWord(category.name)}\n          </span>\n        </h2>\n        <h2 className=\"dark:text-white text-lg\">\n          Children:{\" \"}\n          <span className=\"font-mono font-semibold ml-2\">\n            {category.children.length\n              ? category.children.join(\",\")\n              : \"No children\"}\n          </span>{\" \"}\n        </h2>\n        <h2 className=\"dark:text-white text-lg\">\n          Active:{\" \"}\n          <span className=\"font-mono font-semibold ml-2\">\n            {category.isActive ? \"Yes\" : \"No\"}\n          </span>\n        </h2>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport Error from \"../../components/Error/Index\";\nimport Fetcher from \"../../utils/Fetcher\";\nimport { Button, Empty, Tooltip } from \"antd\";\nimport CategoryCard from \"../../components/CategoryCard/Index\";\nimport { useGlobalContext } from \"../../context/GlobalContextProvider\";\nimport { useNavigate } from \"react-router-dom\";\nimport BreadCrumbs from \"../../components/BreadCrumbs/Index\";\n\nexport default function Index() {\n  const [categories, setCategories] = useState([]);\n  const { sideBar } = useGlobalContext();\n  const navigate = useNavigate();\n\n  const { data, error: categoryError } = useSWR(\"/categories\", Fetcher);\n\n  useEffect(() => {\n    setCategories(data && data.data);\n  }, [data]);\n\n  let breadcrumbs = [\n    {\n      isLink: true,\n      link: \"/\",\n      name: \"Home\",\n    },\n    {\n      isLink: false,\n      link: \"/category\",\n      name: \"Category\",\n    },\n  ];\n\n  return (\n    <>\n      <BreadCrumbs details={breadcrumbs} />\n      {categoryError ? (\n        <Error\n          error={\n            categoryError.response.data.message\n              ? categoryError.response.data.message\n              : categoryError.message\n          }\n        />\n      ) : (\n        <div className=\"pt-3\">\n          <Tooltip title=\"Add Category\">\n            <Button\n              onClick={() => navigate(\"/create-category\")}\n              type=\"ghost\"\n              shape=\"default\"\n              className=\"mr-1 flex py-5 items-center shadow-md dark:bg-deepDark dark:text-white dark:hover:text-blue-400 dark:border-gray-600 dark:hover:border-blue-400\"\n            >\n              <span className=\"\">Create Category</span>\n            </Button>\n          </Tooltip>\n\n          {categories && !categories.length && <Empty />}\n          <div\n            className={\n              sideBar.isOpen\n                ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-3\"\n                : \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-3\"\n            }\n          >\n            {categories?.map((category) => (\n              <CategoryCard key={category._id} category={category} />\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","export default function CapitalLetterWord(word) {\n  if (word?.split(\" \").length > 1) {\n    return word\n      .split(\" \")\n      .map((word) => CapitalLetterWord(word))\n      .join(\" \");\n  } else {\n    return (\n      word?.split(\"\")[0].toUpperCase() +\n      word\n        ?.split(\"\")\n        .filter((letter) => letter !== word.split(\"\")[0])\n        .join(\"\")\n    );\n  }\n}\n"],"names":["Modal","showModal","toggleModal","children","title","visible","onOk","onCancel","footer","Index","category","useState","isOpen","setIsOpen","categories","setCategories","navigate","useNavigate","data","useSWR","Fetcher","useEffect","deleteCategory","id","axiosInstance","toast","filter","mutate","response","message","className","onClick","alt","name","src","image","size","split","toUpperCase","CapitalLetterWord","_id","type","shape","icon","onConfirm","okText","cancelText","length","join","isActive","sideBar","useGlobalContext","categoryError","error","details","isLink","link","map","word","letter"],"sourceRoot":""}